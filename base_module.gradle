import com.gyzq.depend.plugin.*
//****************************************
//******** module模块的公共脚本配置 *********
//****************************************

if (BuildConfig.isDebugModule()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java {
                //排除debug文件夹下的所有文件
                exclude 'debug/**'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.name)
        arg("eventBusIndex", "${ProjectBuildConfig.applicationId}.eventbus.index.${project.name}EventIndex")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':lib_components:lib_common')

    implementation JetPack.HiltCore

    kapt GitHub.ARouteCompiler
    kapt GitHub.EventBusAPT
    kapt GitHub.AutoServiceAnnotations
    kapt JetPack.HiltApt
    kapt JetPack.HiltAndroidx
    annotationProcessor JetPack.HiltAndroidx
    kapt JetPack.LifecycleCompilerAPT

    implementation Kt.stdlib
    implementation AndroidX.coreKtx
    implementation AndroidX.appcompat
    implementation Depend.material
    implementation AndroidX.constraintLayout
    implementation AndroidX.lifecycleExtensions
    implementation AndroidX.lifecycleRuntime
}